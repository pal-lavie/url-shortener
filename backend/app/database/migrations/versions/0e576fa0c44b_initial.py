"""initial

Revision ID: 0e576fa0c44b
Revises: 
Create Date: 2023-11-12 13:19:55.510052

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0e576fa0c44b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('hashed_password', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='url'
    )
    op.create_index(op.f('ix_url_users_email'), 'users', ['email'], unique=True, schema='url')
    op.create_index(op.f('ix_url_users_id'), 'users', ['id'], unique=False, schema='url')
    op.create_index(op.f('ix_url_users_username'), 'users', ['username'], unique=True, schema='url')
    op.create_table('short_urls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_url', sa.String(length=600), nullable=True),
    sa.Column('short_code', sa.String(length=600), nullable=True),
    sa.Column('remaining_uses', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('expiry', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['url.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='url'
    )
    op.create_index(op.f('ix_url_short_urls_id'), 'short_urls', ['id'], unique=False, schema='url')
    op.create_index(op.f('ix_url_short_urls_original_url'), 'short_urls', ['original_url'], unique=False, schema='url')
    op.create_index(op.f('ix_url_short_urls_short_code'), 'short_urls', ['short_code'], unique=True, schema='url')
    op.create_table('short_url_access_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(length=15), nullable=True),
    sa.Column('user_agent', sa.String(length=200), nullable=True),
    sa.Column('access_time', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('short_url_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['short_url_id'], ['url.short_urls.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='url'
    )
    op.create_index(op.f('ix_url_short_url_access_log_id'), 'short_url_access_log', ['id'], unique=False, schema='url')
    op.create_index(op.f('ix_url_short_url_access_log_ip_address'), 'short_url_access_log', ['ip_address'], unique=False, schema='url')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_url_short_url_access_log_ip_address'), table_name='short_url_access_log', schema='url')
    op.drop_index(op.f('ix_url_short_url_access_log_id'), table_name='short_url_access_log', schema='url')
    op.drop_table('short_url_access_log', schema='url')
    op.drop_index(op.f('ix_url_short_urls_short_code'), table_name='short_urls', schema='url')
    op.drop_index(op.f('ix_url_short_urls_original_url'), table_name='short_urls', schema='url')
    op.drop_index(op.f('ix_url_short_urls_id'), table_name='short_urls', schema='url')
    op.drop_table('short_urls', schema='url')
    op.drop_index(op.f('ix_url_users_username'), table_name='users', schema='url')
    op.drop_index(op.f('ix_url_users_id'), table_name='users', schema='url')
    op.drop_index(op.f('ix_url_users_email'), table_name='users', schema='url')
    op.drop_table('users', schema='url')
    # ### end Alembic commands ###
